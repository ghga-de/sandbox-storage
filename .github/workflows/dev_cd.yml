name: Dev CD

on:
  push:
    branches:
      - "dev"
      # - "int" # uncomment to also be triggered for int,
                # might also need adaptions to the update_deployment_repo job
                # so that a different config repo is used for the int deployment

jobs:
  get_commit_version:
    runs-on: ubuntu-latest

    outputs:
      # export to be used in other jobs
      version: ${{ steps.get_commit_version.outputs.version }}
      branch: ${{ steps.get_commit_version.outputs.branch }}

    steps:
      - uses: actions/checkout@v2
        name: Check out code
        with:
          # fetch the entire history
          fetch-depth: 0

      - id: get_commit_version
        name: get commit version
        run: |
          BRANCH="$(git rev-parse --abbrev-ref HEAD)"

          if git describe --tags
          then
            VERSION="$(git describe --tags)-${BRANCH}"
          else
            # fallback if no tag set yet:
            COMMIT_HASH="$(git rev-parse --short HEAD)"
            COMMIT_NUMBER="$(git rev-list --count HEAD)"
            VERSION="0.0.0-${COMMIT_NUMBER}-${COMMIT_HASH}-${BRANCH}"
          fi

          # set as output:
          echo "commit version: ${BRANCH}"
          echo "commit version: ${VERSION}"
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=branch::${BRANCH}"
        
  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: get_commit_version
    
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: ghga/${{ github.event.repository.name }}
          tags: ${{ needs.get_commit_version.outputs.version }}
                #`, latest might` be added for final release
          registry: docker.io
          dockerfile: ./Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  update_deployment_repo:
    runs-on: ubuntu-latest
    needs: 
      - get_commit_version
      - push_to_docker_hub

    env:
      DEPLOYMENT_CONFIG_REPO: ghga-de/sandbox-deployment-configs

    steps:
      - name: trigger update in deployment repo
        run: |
          # access token needs to be of format: <username>:<personal_access_token>
          curl -X POST \
            "https://api.github.com/repos/${DEPLOYMENT_CONFIG_REPO}/dispatches" \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u '${{ secrets.DEPLOYMENT_UPDATE_TOKEN }}' \
            --data '{
              "event_type": "new_app_version", 
              "client_payload": {
                "chart_name": "${{ github.event.repository.name }}", 
                "context": "${{ needs.get_commit_version.outputs.branch }}",
                "new_app_version": "${{ needs.get_commit_version.outputs.version }}"
              } 
            }'
